application:
  title: '@project.name@'
  version: '@project.version@'

bookshelf:
  some-number: 11
  some-text: More information

server:
  port: 8080

spring:
  datasource:
    url:  jdbc:postgresql://roasted-tomato.db.elephantsql.com:5432/ooqpwbmi # adapt URL to your database
    driver-class-name: org.postgresql.Driver
    username: ooqpwbmi # adapt username accordingly
    # set PG_PASSWORD in your environment, e.g., by running "export PG_PASSWORD=..." in the command line
    password: ${PG_PASSWORD}
  jpa:
    open-in-view: false
    hibernate:
      # Re-generating the DDL upon each application start to account for data model changes.
      ddl-auto: create-drop
    # By default, Spring Boot will try to populate the database from data.sql on startup,
    # i.e. before JPA has the opportunity to generate DDL statements from classes annotated with @Entity.
    defer-datasource-initialization: true
  sql:
    init:
      # The default value is 'embedded', which only works for in-memory databases.
      # Since we're using a 'non-embedded' database here, we now need to set this to 'always'.
      mode: always
